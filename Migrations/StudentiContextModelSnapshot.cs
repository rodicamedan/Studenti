// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Studenti.Data;

namespace Studenti.Migrations
{
    [DbContext(typeof(StudentiContext))]
    partial class StudentiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Studenti.Models.Facultate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NumeFacultate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Facultate");
                });

            modelBuilder.Entity("Studenti.Models.Specializare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Denumire")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Specializare");
                });

            modelBuilder.Entity("Studenti.Models.SpecializareStudent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDSpecializare")
                        .HasColumnType("int");

                    b.Property<int?>("SpecializareID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SpecializareID");

                    b.HasIndex("StudentID");

                    b.ToTable("SpecializareStudent");
                });

            modelBuilder.Entity("Studenti.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInscriere")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultateID")
                        .HasColumnType("int");

                    b.Property<int>("IDFacultate")
                        .HasColumnType("int");

                    b.Property<string>("NrTelefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FacultateID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Studenti.Models.SpecializareStudent", b =>
                {
                    b.HasOne("Studenti.Models.Specializare", "Specializare")
                        .WithMany("SpecializareStudenti")
                        .HasForeignKey("SpecializareID");

                    b.HasOne("Studenti.Models.Student", "Student")
                        .WithMany("SpecializareStudenti")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Studenti.Models.Student", b =>
                {
                    b.HasOne("Studenti.Models.Facultate", "Facultate")
                        .WithMany("Stud")
                        .HasForeignKey("FacultateID");
                });
#pragma warning restore 612, 618
        }
    }
}
